apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-docassemble-backend
  labels:
    app: {{ .Release.Name }}-docassemble-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-docassemble-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-docassemble-backend
        appType: docassemble
    spec:
      {{- if .Values.multiNodeDeployment }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: appType
                operator: In
                values:
                - docassemble
            topologyKey: kubernetes.io/hostname
      {{- end }}
{{- if or .Values.inClusterMinio .Values.inClusterPostgres .Values.inClusterRedis (and .Values.adminEmail .Values.adminPassword) }}
      initContainers:
  {{- if .Values.inClusterMinio }}
      - name: init-minio
        image: {{ template "docassemble.minio.clientImage" . }}
        imagePullPolicy: {{ .Values.minio.image.pullPolicy | quote }}
        command: ['sh', '-c', 'until { mc config host add minio "$S3_ENDPOINT_URL" "$S3_ACCESS_KEY" "$S3_SECRET_KEY"; } do echo "waiting for minio"; sleep 10; done; sleep 10; mc mb --ignore-existing "$S3_BUCKET"']
        env:
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio-creds-secret
              key: accesskey
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio-creds-secret
              key: secretkey
        - name: S3_ENDPOINT_URL
          value: "http://{{ .Release.Name }}-minio:9000"
        - name: S3_BUCKET
          value: "docassemble-bucket"
  {{- end }}
  {{- if and .Values.adminEmail .Values.adminPassword }}
      - name: init-credentials
        image: {{ template "docassemble.bashImage" . }}
        imagePullPolicy: {{ .Values.bashImage.pullPolicy | quote }}
        command: ['bash', '-c', 'echo -e "export DA_ADMIN_EMAIL=$DA_ADMIN_EMAIL\nexport DA_ADMIN_PASSWORD=$DA_ADMIN_PASSWORD\nexport DA_ADMIN_API_KEY=$DA_ADMIN_API_KEY" > /configdata/initial_credentials']
        volumeMounts:
        - name: config-data
          mountPath: /configdata
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-docassemble-admin-secret
  {{- end }}
  {{- if .Values.inClusterPostgres }}
      - name: init-postgres
        image: {{ template "docassemble.postgresql.image" . }}
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy | quote }}
        command: ['sh', '-c', 'until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U {{ .Values.postgresql.auth.username }}; do echo waiting for postgres; sleep 2; done;']
  {{- end }}
  {{- if .Values.inClusterRedis }}
      - name: init-redis
        image: {{ template "docassemble.redis.image" . }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy | quote }}
        command: ['sh', '-c', 'until redis-cli -h {{ .Release.Name }}-daredis-master ping; do echo waiting for redis; sleep 2; done;']
  {{- end }}
  {{- if .Values.inClusterRabbitMQ }}
      - name: init-rabbitmq
        image: {{ template "docassemble.rabbitmq.image" . }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy | quote }}
        command: ['sh', '-c', 'until rabbitmqctl --erlang-cookie {{ .Values.rabbitmq.auth.erlangCookie | quote }} --longnames --node "rabbit@{{ .Release.Name }}-rabbitmq-0.{{ .Release.Name }}-rabbitmq-headless.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}" status; do echo waiting for rabbitmq; sleep 2; done;']
  {{- end }}
{{- end }}
      containers:
      - name: docassemble
        image: {{ template "docassemble.daImage" . }}
        imagePullPolicy: {{ .Values.daImage.pullPolicy | quote }}
{{- if .Values.readOnlyFileSystem }}
        securityContext:
          readOnlyRootFilesystem: true
{{- end }}
        volumeMounts:
        - name: config-data
          mountPath: /configdata
{{- if .Values.readOnlyFileSystem }}
        - name: tmp
          mountPath: /tmp
        - name: varrun
          mountPath: /var/run
        - name: varlogsupervisor
          mountPath: /var/log/supervisor
        - name: varlognginx
          mountPath: /var/log/nginx
        - name: varlibsyslogng
          mountPath: /var/lib/syslog-ng
        - name: varlibnginx
          mountPath: /var/lib/nginx
        - name: varmail
          mountPath: /var/mail
        - name: varwwwcache
          mountPath: /var/www/.cache
        - name: varwwwconfig
          mountPath: /var/www/.config
        - name: varwwwtexlive
          mountPath: /var/www/.texlive{{ .Values.texliveVersion }}
        - name: log-vol
          mountPath: /usr/share/docassemble/log
        - name: configuration-vol
          mountPath: /usr/share/docassemble/config
          readOnly: true
        - name: cron-vol
          mountPath: /usr/share/docassemble/cron
          readOnly: true
        - name: syslogng-vol
          mountPath: /usr/share/docassemble/syslogng
          readOnly: true
        - name: backend-site-config-vol
          mountPath: /etc/nginx/sites-enabled
          readOnly: true
{{- end }}
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-docassemble-secret
        env:
        - name: CONTAINERROLE
          value: "{{ if and (not .Values.inClusterRabbitMQ) (not .Values.amqpURL) }}rabbitmq:{{ end }}{{ if and (not .Values.inClusterRabbitMQ) (not .Values.redisURL) }}redis:{{ end }}{{ if and (not .Values.inClusterPostgres) (not .Values.db.host) }}sql:{{ end }}log:cron{{- if not .Values.readOnlyFileSystem }}:mail{{ end }}"
        {{ include "docassemble.commonEnvironment" . }}
        ports:
        - containerPort: 8082
        - containerPort: 9001
        - containerPort: 514
        - containerPort: 25
{{- if and (not .Values.inClusterRedis) (not .Values.redisURL) }}
        - containerPort: 6379
{{- end }}
{{- if and (not .Values.inClusterPostgres) (not .Values.db.host) }}
        - containerPort: 5432
{{- end }}
{{- if and (not .Values.inClusterRabbitMQ) (not .Values.amqpURL) }}
        - containerPort: 4369
        - containerPort: 5671
        - containerPort: 5672
        - containerPort: 25672
{{- end }}
        readinessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "supervisorctl status cron | grep RUNNING"
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 25
        livenessProbe:
          httpGet:
            path: /listlog/health_check
            port: 8082
          initialDelaySeconds: 1560
          periodSeconds: 60
        resources:
          requests:
            memory: "{{ .Values.resources.backend.requests.memory }}"
            cpu: "{{ .Values.resources.backend.requests.cpu }}"
          limits:
            memory: "{{ .Values.resources.backend.limits.memory }}"
            cpu: "{{ .Values.resources.backend.limits.cpu }}"
      volumes:
      - name: config-data
        emptyDir: {}
{{- if .Values.readOnlyFileSystem }}
      - name: tmp
        emptyDir: {}
      - name: varrun
        emptyDir: {}
      - name: varlogsupervisor
        emptyDir: {}
      - name: varlognginx
        emptyDir: {}
      - name: varlibsyslogng
        emptyDir: {}
      - name: varlibnginx
        emptyDir: {}
      - name: varmail
        emptyDir: {}
      - name: varwwwcache
        emptyDir: {}
      - name: varwwwconfig
        emptyDir: {}
      - name: varwwwtexlive
        emptyDir: {}
      - name: log-vol
        emptyDir: {}
      - name: configuration-vol
        configMap:
          name: {{ .Release.Name }}-docassemble-configuration
      - name: cron-vol
        configMap:
          name: {{ .Release.Name }}-docassemble-backend-cron
      - name: syslogng-vol
        configMap:
          name: {{ .Release.Name }}-docassemble-backend-syslogng
      - name: backend-site-config-vol
        configMap:
          name: {{ .Release.Name }}-docassemble-backend-site-config
{{- end }}
      terminationGracePeriodSeconds: 120
