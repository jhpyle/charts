multiNodeDeployment: true
replicas: 2
clusterDomain: cluster.local
# For security you are strongly encouraged to set your
# own secretKey. This is used for encrypting passwords and
# interview answers. The secretKey must be exactly this
# long:   |--------------------------------|
secretKey: JmjajLcAXLvOGkDkbQKAEgIczAlPbfBo

#daConfiguration:
#  appname: Legal Helper
#  brandname: Legal Helper Application
#  allow demo: false
#  debug: false

daAllowUpdates: true

syslogNgVersion: "4.3.1"
pythonVersion: "3.12"
supervisor:
  username: user
  password: abc123abc123
sslCertificate: ""
sslKey: ""
bashImage:
  registry: docker.io
  repository: bash
  tag: 5.2.37
  pullPolicy: IfNotPresent
busyboxImage:
  registry: docker.io
  repository: busybox
  tag: 1.37.0
  pullPolicy: IfNotPresent
timeZone: America/New_York
#locale: en_US.UTF-8 UTF-8
daImage:
  registry: docker.io
  repository: jhpyle/docassemble
  tag: latest
  pullPolicy: Always
daMonitorImage:
  registry: docker.io
  repository: jhpyle/docassemble-monitor
  tag: latest
  pullPolicy: Always
albImage:
  registry: docker.io
  repository: amazon/aws-alb-ingress-controller
  tag: v2.4.5
  pullPolicy: IfNotPresent
daHostname: localhost
maxBodySize: 16m
usingSslTermination: true
useHttps: false
redirectHttp: true
exposeWebsockets: true
inClusterNGINX: true
webAppServiceType: ClusterIP
resources:
  backend:
    requests:
      memory: 1Gi
      cpu: 200m
    limits:
      memory: 3Gi
      cpu: 4
  deployment:
    requests:
      memory: 2Gi
      cpu: 200m
    limits:
      memory: 4Gi
      cpu: 4
  monitor:
    requests:
      memory: 100Mi
      cpu: 10m
    limits:
      memory: 200Mi
      cpu: 125m
#inClusterNGINXClusterIssuer: null
inClusterMinio: true
inClusterPostgres: true
inClusterRedis: true
inClusterRabbitMQ: true
inClusterGotenberg: true
s3:
  enable: false
  bucket: docassemble-bucket
  #accessKey: null
  #secretKey: null
azure:
  enable: false
  #accountName: null
  #accountKey: null
  #container: null
#amqpURL: null
#redisURL: null
db:
  #host: null
  #name: docassemble
  #user: docassemble
  #password: abc123
  backup: false
  #port: 5432
  #tablePrefix: null
  #prefix: postgresql+psycopg2://
rabbitmq:
  clusterDomain: cluster.local
  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r47
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  image:
    registry: docker.io
    repository: bitnami/rabbitmq
    tag: 4.1.1-debian-12-r0
    debug: true
  auth:
    password: abc123
    erlangCookie: jmvk83gy7gsbf9kb37gk99hdf2d4jdz
  persistence:
    size: 2Gi
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
minio:
  clusterDomain: cluster.local
  persistence:
    size: 5Gi
  auth:
    rootUser: "AKIAIOSFOD"
    rootPassword: "wJalrXUtnFEMI/K7MDENG/bPxRfiCY1R23r2wer"
  mode: distributed
  console:
    image:
      registry: docker.io
      repository: bitnami/minio-object-browser
      tag: 2.0.1-debian-12-r3
      pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 128m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 2Gi
  clientImage:
    registry: docker.io
    repository: bitnami/minio-client
    tag: 2025.5.21-debian-12-r6
    pullPolicy: IfNotPresent
  image:
    registry: docker.io
    repository: bitnami/minio
    tag: 2025.5.24-debian-12-r7
    pullPolicy: IfNotPresent
  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r47
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 128m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 1Gi
ingress-nginx:
  rbac.create: true
  controller:
    watchIngressWithoutClass: true
    image:
      registry: registry.k8s.io
      image: ingress-nginx/controller
      tag: "v1.12.3"
      pullPolicy: IfNotPresent
    admissionWebhooks:
      patch:
        image:
          registry: registry.k8s.io
          image: ingress-nginx/kube-webhook-certgen
          tag: "v1.5.4"
          pullPolicy: IfNotPresent
    replicaCount: 1
    nodeSelector:
      kubernetes.io/os: linux
    publishService:
      enabled: true
    config:
      use-forwarded-headers: "true"
    service:
      enableHttps: false
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  defaultBackend:
    image:
      registry: registry.k8s.io
      image: defaultbackend-amd64
      tag: "1.5"
      pullPolicy: IfNotPresent
redis:
  clusterDomain: cluster.local
  nameOverride: daredis
  architecture: replication
  auth:
    enabled: true
    password: abc123
    sentinel: true
  master:
    terminationGracePeriodSeconds: 120
    persistence:
      size: 5Gi
    resources:
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 100m
        memory: 500Mi
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r47
      pullPolicy: IfNotPresent
      debug: true
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 8.0.2-debian-12-r3
    pullPolicy: IfNotPresent
    debug: true
  sysctl:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r47
      pullPolicy: IfNotPresent
      debug: true
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
postgresql:
  clusterDomain: cluster.local
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 17.5.0-debian-12-r10
    pullPolicy: IfNotPresent
  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r47
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  persistence:
    size: 5Gi
  primary:
    service:
      type: ClusterIP
      ports:
        postgresql: 5432
  auth:
    database: docassemble
    username: docassemble
    password: abc123
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
gotenberg:
  image:
    registry: docker.io
    repository: gotenberg/gotenberg
    tag: 8.21
    pullPolicy: IfNotPresent
  replicas: 2
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      cpu: 1
      memory: 1Gi
# global:
#   storageClass: null
